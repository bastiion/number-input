{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`number-input` is an element that can:\n* prevent non numeric input\n* guarantee **live** data to be valid\n* pad a value with `0`, to a specific length\n* size the input, according to it's length\n\nExample:\n```html\n<number-input step=\"2\" min=\"-20\" max=\"140\" pad-length=\"2\"></number-input>\n```\n\nIt sizes automatically. Use `key-up` and `key-down` to increment the value. If `step` is given, the value is a **multiple** of `step`.\n\n### Styling\nCustom property                  | Description                            | Default\n---------------------------------|----------------------------------------|--------------------\n`--number-input`                 | style of the input                     | {}\n`--number-input-focus`           | style of the focussed and hovered input | {}\n`--number-input-placeholder`     | style of the placeholder               | {}\n\n```css\n:host {\n  --number-input-focus: {\n    background: rgba(0,0,0,.25);\n  };\n  --number-input-placeholder: {\n    color: pink;\n  };\n}\n```",
      "summary": "",
      "path": "number-input.html",
      "properties": [
        {
          "name": "min",
          "type": "number",
          "description": "minimal input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 17,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "max",
          "type": "number",
          "description": "maximal input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 25,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "step",
          "type": "number",
          "description": "step for changing the input (referencing to `min` or `0`)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "value",
          "type": "number",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 46,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\""
            }
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "saturate",
          "type": "boolean",
          "description": "if true, the value does not revolve the range according to the maximum or the minimum",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 51,
              "column": 10
            },
            "end": {
              "line": 54,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "padLength",
          "type": "number",
          "description": "length to pad the string (with `0`) according to the total amount of numbers",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 10
            },
            "end": {
              "line": 122,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateView\""
            }
          }
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "placeholder string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateView\""
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 10
            },
            "end": {
              "line": 137,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "noAutoWidth",
          "type": "boolean",
          "description": "disable autosizing",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 10
            },
            "end": {
              "line": 145,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noAutoWidthChanged\""
            }
          }
        },
        {
          "name": "noPadding",
          "type": "boolean",
          "description": "disable padding (auto-width still effected by `padLength`)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 10
            },
            "end": {
              "line": 153,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateView\""
            }
          }
        },
        {
          "name": "valueString",
          "type": "string",
          "description": "value string of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 10
            },
            "end": {
              "line": 162,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueStringChanged\""
            }
          }
        },
        {
          "name": "unit",
          "type": "string",
          "description": "unit of the value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 10
            },
            "end": {
              "line": 169,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_toFixed",
          "type": "number",
          "description": "pad to precision",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 10
            },
            "end": {
              "line": 177,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 6
            },
            "end": {
              "line": 275,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ]
        },
        {
          "name": "_checkValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 95,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_updateValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 101,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_checkStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 116,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "step"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_safeMult",
          "description": "emulating handwritten multiplication",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 124,
              "column": 6
            },
            "end": {
              "line": 143,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "[number]",
              "description": "[factor]"
            },
            {
              "name": "b",
              "type": "[number]",
              "description": "[factor]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[product]"
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_safeAdd",
          "description": "emulating handwritten addition",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 151,
              "column": 6
            },
            "end": {
              "line": 164,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "[number]",
              "description": "[summand]"
            },
            {
              "name": "b",
              "type": "[number]",
              "description": "[summand]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[sum]"
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 194,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 199,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_format",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 221,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            },
            {
              "name": "padLength"
            },
            {
              "name": "toFixed"
            }
          ]
        },
        {
          "name": "_computeFixed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 233,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ]
        },
        {
          "name": "_checkInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 6
            },
            "end": {
              "line": 237,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_valueStringChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 6
            },
            "end": {
              "line": 257,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueString"
            },
            {
              "name": "oldValueString"
            }
          ]
        },
        {
          "name": "_checkKeycode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 6
            },
            "end": {
              "line": 305,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_startIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 6
            },
            "end": {
              "line": 316,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ]
        },
        {
          "name": "_stopIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 6
            },
            "end": {
              "line": 322,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_increm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 324,
              "column": 6
            },
            "end": {
              "line": 330,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ]
        },
        {
          "name": "_updateView",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 6
            },
            "end": {
              "line": 336,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ]
        },
        {
          "name": "_computeWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 338,
              "column": 6
            },
            "end": {
              "line": 361,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_noAutoWidthChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 369,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noAutoWidth"
            }
          ]
        },
        {
          "name": "focus",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 374,
              "column": 6
            },
            "end": {
              "line": 376,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "blur",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 381,
              "column": 6
            },
            "end": {
              "line": 383,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 43,
          "column": 4
        },
        "end": {
          "line": 384,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "NumberInput",
      "attributes": [
        {
          "name": "min",
          "description": "minimal input",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 17,
              "column": 10
            },
            "end": {
              "line": 20,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "max",
          "description": "maximal input",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 25,
              "column": 10
            },
            "end": {
              "line": 28,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "step",
          "description": "step for changing the input (referencing to `min` or `0`)",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 33,
              "column": 10
            },
            "end": {
              "line": 37,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 42,
              "column": 10
            },
            "end": {
              "line": 46,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "saturate",
          "description": "if true, the value does not revolve the range according to the maximum or the minimum",
          "sourceRange": {
            "file": "bower_components\\range-input\\range-mixin.html",
            "start": {
              "line": 51,
              "column": 10
            },
            "end": {
              "line": 54,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "pad-length",
          "description": "length to pad the string (with `0`) according to the total amount of numbers",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 10
            },
            "end": {
              "line": 122,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "placeholder",
          "description": "placeholder string",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 10
            },
            "end": {
              "line": 137,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-auto-width",
          "description": "disable autosizing",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 10
            },
            "end": {
              "line": 145,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-padding",
          "description": "disable padding (auto-width still effected by `padLength`)",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 10
            },
            "end": {
              "line": 153,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "value-string",
          "description": "value string of the input",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 10
            },
            "end": {
              "line": 162,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "unit",
          "description": "unit of the value",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 10
            },
            "end": {
              "line": 169,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-string-changed",
          "description": "Fired when the `valueString` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "number-input",
      "mixins": [
        "RangeMixin"
      ]
    }
  ]
}
